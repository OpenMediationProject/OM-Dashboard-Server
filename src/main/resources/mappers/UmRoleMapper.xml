<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adtiming.om.ds.dao.UmRoleMapper">
  <resultMap id="BaseResultMap" type="com.adtiming.om.ds.model.UmRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="descn" jdbcType="VARCHAR" property="descn" />
    <result column="organization_role" jdbcType="INTEGER" property="organizationRole" />
    <result column="user_role" jdbcType="INTEGER" property="userRole" />
    <result column="app_role" jdbcType="INTEGER" property="appRole" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="lastmodify" jdbcType="TIMESTAMP" property="lastmodify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, descn, organization_role, user_role, app_role, create_time, lastmodify
  </sql>
  <select id="select" parameterType="com.adtiming.om.ds.model.UmRoleCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from um_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from um_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from um_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.adtiming.om.ds.model.UmRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into um_role (name, descn, organization_role, 
      user_role, app_role, create_time, 
      lastmodify)
    values (#{name,jdbcType=VARCHAR}, #{descn,jdbcType=VARCHAR}, #{organizationRole,jdbcType=INTEGER}, 
      #{userRole,jdbcType=INTEGER}, #{appRole,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastmodify,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.adtiming.om.ds.model.UmRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into um_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="descn != null">
        descn,
      </if>
      <if test="organizationRole != null">
        organization_role,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="appRole != null">
        app_role,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastmodify != null">
        lastmodify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="descn != null">
        #{descn,jdbcType=VARCHAR},
      </if>
      <if test="organizationRole != null">
        #{organizationRole,jdbcType=INTEGER},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="appRole != null">
        #{appRole,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodify != null">
        #{lastmodify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.adtiming.om.ds.model.UmRole">
    update um_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="descn != null">
        descn = #{descn,jdbcType=VARCHAR},
      </if>
      <if test="organizationRole != null">
        organization_role = #{organizationRole,jdbcType=INTEGER},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
      <if test="appRole != null">
        app_role = #{appRole,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodify != null">
        lastmodify = #{lastmodify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.adtiming.om.ds.model.UmRole">
    update um_role
    set name = #{name,jdbcType=VARCHAR},
      descn = #{descn,jdbcType=VARCHAR},
      organization_role = #{organizationRole,jdbcType=INTEGER},
      user_role = #{userRole,jdbcType=INTEGER},
      app_role = #{appRole,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      lastmodify = #{lastmodify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserRoles" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    a.id, a.name, a.descn, a.organization_role, a.user_role, a.app_role, a.create_time, a.lastmodify
    from um_role a left join um_user_role b on (a.id=b.role_id)
    where b.user_id=#{userId,jdbcType=INTEGER}
  </select>
</mapper>
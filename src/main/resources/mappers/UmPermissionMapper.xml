<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adtiming.om.ds.dao.UmPermissionMapper">
  <resultMap id="BaseResultMap" type="com.adtiming.om.ds.model.UmPermission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sort_index" jdbcType="INTEGER" property="sortIndex" />
    <result column="sort_index_ext" jdbcType="INTEGER" property="sortIndexExt" />
    <result column="descn" jdbcType="VARCHAR" property="descn" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="lastmodify" jdbcType="TIMESTAMP" property="lastmodify" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.adtiming.om.ds.model.UmPermission">
    <result column="api_path" jdbcType="LONGVARCHAR" property="apiPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pid, type, title, name, sort_index, sort_index_ext, descn, status, create_time, 
    lastmodify
  </sql>
  <sql id="Blob_Column_List">
    api_path
  </sql>
  <select id="selectWithBLOBs" parameterType="com.adtiming.om.ds.model.UmPermissionCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from um_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="select" parameterType="com.adtiming.om.ds.model.UmPermissionCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from um_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from um_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from um_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.adtiming.om.ds.model.UmPermission">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into um_permission (pid, type, title, 
      name, sort_index, sort_index_ext, 
      descn, status, create_time, 
      lastmodify, api_path)
    values (#{pid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sortIndex,jdbcType=INTEGER}, #{sortIndexExt,jdbcType=INTEGER}, 
      #{descn,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastmodify,jdbcType=TIMESTAMP}, #{apiPath,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.adtiming.om.ds.model.UmPermission">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into um_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sortIndex != null">
        sort_index,
      </if>
      <if test="sortIndexExt != null">
        sort_index_ext,
      </if>
      <if test="descn != null">
        descn,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastmodify != null">
        lastmodify,
      </if>
      <if test="apiPath != null">
        api_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sortIndex != null">
        #{sortIndex,jdbcType=INTEGER},
      </if>
      <if test="sortIndexExt != null">
        #{sortIndexExt,jdbcType=INTEGER},
      </if>
      <if test="descn != null">
        #{descn,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodify != null">
        #{lastmodify,jdbcType=TIMESTAMP},
      </if>
      <if test="apiPath != null">
        #{apiPath,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.adtiming.om.ds.model.UmPermission">
    update um_permission
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sortIndex != null">
        sort_index = #{sortIndex,jdbcType=INTEGER},
      </if>
      <if test="sortIndexExt != null">
        sort_index_ext = #{sortIndexExt,jdbcType=INTEGER},
      </if>
      <if test="descn != null">
        descn = #{descn,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodify != null">
        lastmodify = #{lastmodify,jdbcType=TIMESTAMP},
      </if>
      <if test="apiPath != null">
        api_path = #{apiPath,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.adtiming.om.ds.model.UmPermission">
    update um_permission
    set pid = #{pid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sort_index = #{sortIndex,jdbcType=INTEGER},
      sort_index_ext = #{sortIndexExt,jdbcType=INTEGER},
      descn = #{descn,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      lastmodify = #{lastmodify,jdbcType=TIMESTAMP},
      api_path = #{apiPath,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.adtiming.om.ds.model.UmPermission">
    update um_permission
    set pid = #{pid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sort_index = #{sortIndex,jdbcType=INTEGER},
      sort_index_ext = #{sortIndexExt,jdbcType=INTEGER},
      descn = #{descn,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      lastmodify = #{lastmodify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserPermissions" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select a.id, a.pid, a.type, a.title, a.name, a.api_path, a.sort_index, a.sort_index_ext, a.descn, a.status, a.create_time,a.lastmodify
    from um_permission a
    left join um_role_permission b on (a.id=b.permission_id)
    left join um_user_role c on (b.role_id=c.role_id)
    where user_id=#{userId,jdbcType=INTEGER}
  </select>
</mapper>